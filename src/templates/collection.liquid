{% include 'vars' %}

{% capture collectionHeader %}
<header class="page-header group-of-collections">
  <div class="container">
    <div class="row">
      <div class="col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2">
          <h1>{{ collection.title | remove: "Men's" | remove: "Women's" | remove: "Mens" | remove: "Womens" }}</h1>
          {% if collection.description != blank %}<p>{{ collection.description }}</p>{% endif %}
      </div>
    </div>
  </div>
</header>
{% endcapture %}
{% assign handles = collection.metafields["global"]["collection-handles"] | replace: '<p>' | replace: '</p>' | split: '<br />' %}

{% comment %} so the Buy now link in a collection hero uses this collection and not the product family {% endcomment %}
{% assign referringCollection = collection %}

{% case collection.metafields["global"]["layout"] %}
  
  {% when 'product-sections-only' %} 

    {% if collection.metafields["global"]["hero-image"] %}
      <div class="max-container">
        {% include 'collection-hero' with collection, tag: 'h1' %}
      </div>
    {% else %}
      {{ collectionHeader }}
    {% endif %}

    {% for handle in handles %}
      {% assign collection = collections[handle] %}
      {% unless collection.title == blank %}
        {% capture productRow %}
        <div class="product-row-wrap">
          <div class="product-row">
            {% paginate collection.products by 25 %}
              {% for product in collection.products %}
                <div class="item">{% include 'product-item' with product %}</div>
              {% endfor %}
            {% endpaginate %}
          </div>
        </div>
        {% endcapture %}

        {% comment %} support gendered layouts {% endcomment %}
        {%- assign gender = referringCollection.metafields["global"]["gender"] -%}
        {%- if gender == "default" -%}
          {%- assign gender = "" -%}
        {%- else -%}
          {%- assign gender = gender | append: '-' -%}
        {%- endif -%}
        {%- capture rowImageKey -%}{{ gender }}row-image{%- endcapture -%}
        {%- capture rowImageAltKey -%}{{ gender }}row-image-alt{%- endcapture -%}
        {% comment %} fall back to default if we don't have a gender-specific image {% endcomment %}
        {%- if collection.metafields['global'][rowImageKey] == blank -%}
        {%- assign rowImageKey = "row-image" -%}
        {%- assign rowImageAltKey = "row-image-alt" -%}
        {%- endif -%}

        {% assign productRowImage = nil %}
        {% if collection.metafields["global"][rowImageKey] %}
          {% capture productRowImage %}
            {{ collection.metafields["global"][rowImageKey] | img_tag: collection.metafields["global"][rowImageAltKey] }}
          {% endcapture %}
        {% endif %}

        <section class="block product-family container">
          {% if productRowImage %}
            <div class="fw-xs mb-gutter hidden-sm hidden-md hidden-lg">{{ productRowImage }}</div>
          {% endif %}
          <div class="product-row-title">
            <h2 class="title">{{ collection.title }}</h2><span class="configuration-options"></span>
            <p class="description">{{ collection.metafields["global"]["row-description"] }}</p>
          </div>
          {% if productRowImage %}
            <div class="row">
              <div class="col-sm-4 hidden-xs">
                {{ productRowImage }}
              </div>
              <div class="col-sm-8">
                {{ productRow }}
              </div>
            </div>
          {% else %}
            {{ productRow }}
          {% endif %}
        </section>
      {% endunless %}
    {% endfor %}

  {% when 'hero-sections-only' %}
    
    {{ collectionHeader }}
    {% for handle in handles %}
      {% assign collection = collections[handle] %}
      {% unless collection.title == blank %}
        <section class="block product-family max-container without-products">
          {% include 'collection-hero' with collection, tag: 'h2', mode: 'hero-only' %}
        </section>
      {% endunless %}
    {% endfor %}

  {% when 'hero-and-product-sections' %}

    {{ collectionHeader }}
    {% for handle in handles %}
      {% assign collection = collections[handle] %}
      {% unless collection.title == blank %}
        <section class="block product-family max-container">
          {% include 'collection-hero' with collection, tag: 'h2', mode: 'hero-and-products' %}
          <div class="container">
            <div class="product-row-title">
              <span class="configuration-options"></span>
            </div>
            <div class="product-row-wrap">
              <div class="product-row">
                {% paginate collection.products by 25 %}
                  {% for product in collection.products %}
                    <div class="item">{% include 'product-item' with product %}</div>
                  {% endfor %}
                {% endpaginate %}
              </div>
            </div>
          </div>
        </section>
      {% endunless %}
    {% endfor %}

  {% else %}
  
    {% paginate collection.products by 25 %}
    {%- capture allProducts -%}
    {%- for product in collection.products -%}
      {{ product.title | split: ' - ' | first }}|
    {%- endfor -%}
    {%- endcapture -%}
    {%- assign productGroups = allProducts | split: '|' | uniq -%}

    {% if collection.metafields["global"]["hero-image"] %}
      <div class="max-container">
        {% include 'collection-hero' with collection, tag: 'h1' %}
      </div>
    {% else %}
      <header class="page-header is-collection" data-collection="{{ collection.id }}">
        <h1>{{ collection.title | remove: "Shop " }}</h1>
        <div data-filters-wrap>{% comment%} both .has-bar and #filters are inline-block, so we need a newline somehow {% endcomment %}
          <div id="filters">
            <ul>
              <li><a href="#price-filters" class="filter-toggle">Price</a></li>
              <li><a href="#function-filters" class="filter-toggle">Function</a></li>
              <li><a href="#fit-filters" class="filter-toggle">Device Fit</a></li>
              <li><a href="#category-filters" class="filter-toggle">Category</a></li>
            </ul>
          </div>
          <div id="filters-panel">
            <ul class="filter-options" style="display: none" id="price-filters">
              <li><button class="filter-option is-price-range" data-hook="p-0-100">$0.00 - $100.00</button></li>
              <li><button class="filter-option is-price-range" data-hook="p-100-200">$100.00 - $200.00</button></li>
              <li><button class="filter-option is-price-range" data-hook="p-200-300">$200.00 - $300.00</button></li>
              <li><button class="filter-option is-price-range" data-hook="p-300-400">$300.00 - $400.00</button></li>
              <li><button class="filter-option is-price-range" data-hook="p-400-500">$400.00 - $500.00</button></li>
            </ul>
            <ul class="filter-options" style="display: none" id="function-filters">
              {%- assign tagsList = shop.metafields["global"]["function-tags"] | split: ',' -%}
                {%- for tag in tagsList -%}
                    {%- include 'filter-option' -%}
                {%- endfor -%}
            </ul>
            <ul class="filter-options" style="display: none" id="fit-filters">
              {%- assign tagsList = shop.metafields["global"]["device-fit-tags"] | split: ',' -%}
                {%- for tag in tagsList -%}
                    {%- include 'filter-option' -%}
                {%- endfor -%}
            </ul>
            <ul class="filter-options" style="display: none" id="category-filters">
              {%- assign tagsList = shop.metafields["global"]["category-tags"] | split: ',' -%}
                {%- for tag in tagsList -%}
                    {%- include 'filter-option' -%}
                {%- endfor -%}
            </ul>

            <div id="active-filters">
              <span data-active-filters></span>
              <a href="#" id="reset-filters">Reset Filters</a>
            </div>
          </div>
        </div>
      </header>
    {% endif %}
   
    {%- for parentProductName in productGroups -%}
      <section class="container product-family" data-family-name="{{ parentProductName | handleize }}" data-content-category="{{ parentProductName }}">
        <div class="product-row-title">
          <h2 class="title">{{ parentProductName | remove: "The " }}</h2><span class="configuration-options"></span>
        </div>
        <div class="product-row-wrap">
          <div class="product-row">
            {% for product in collection.products %}
              {%- assign productNameParts = product.title | split: ' - ' -%}
              {% if productNameParts[0] != parentProductName %}{% continue %}{% endif %}
              {%- assign priceClass = 'p-0-100' -%}
              {%- assign thisPrice = product.price | divided_by: 100 -%}
              {%- if thisPrice >= 100 and thisPrice <= 200 -%}{%- assign priceClass = 'p-100-200' -%}{%- endif -%}
              {%- if thisPrice >= 200 and thisPrice <= 300 -%}{%- assign priceClass = 'p-200-300' -%}{%- endif -%}
              {%- if thisPrice >= 300 and thisPrice <= 400 -%}{%- assign priceClass = 'p-300-400' -%}{%- endif -%}
              {%- if thisPrice >= 400 and thisPrice <= 500 -%}{%- assign priceClass = 'p-400-500' -%}{%- endif -%}
              <div class="item f-hook{% for tag in product.tags %} f-{{ tag | handleize }}{% endfor %} {{ priceClass }}">
                {% include 'product-item' with product %}
              </div>
            {% endfor %}
          </div>
        </div>
      </section>
    {%- endfor -%}
    <div class="container">
      <div id="filter-alert" style="display: none" class="alert alert-warning">No products match your filter selections.</div>
      {% if paginate.pages > 1 %}
      {% comment %}{% include 'pagination' %}{% endcomment %}
      {% comment %} js hooks into this to get subsequent pages {% endcomment %}
        <div class="ajax-pagination" style="display: none" aria-hidden="true">
          {% for i in (1..paginate.pages) %}
            {% if i == 1 %}
              {% continue %}
            {% else %}
            <a href="{{ canonical_url }}?page={{ i }}">{{ i }}</a>
            {% endif %}
          {% endfor %}
        </div>
      {% endif %}
    </div>
    {% comment %}
      JS pulls this text into a master list of all skus after the AJAX is done getting subsequent pages
      The final list is pushed to GTM for a ViewContent facebook event
    {% endcomment %}
    <div id="content-ids" style="display: none"> 
      {%- for product in collection.products -%}{{ product.variants.first.sku }},{%- endfor -%}
    </div>
    {% endpaginate %}
    
{% endcase %} 

{% if referringCollection.metafields["global"]["compare-page-handle"] %}
  {% assign comparePage = pages[referringCollection.metafields["global"]["compare-page-handle"]] %}
  {% unless comparePage.url == blank %}
    <div class="discover-cta mt-small" id="compare-cta">
      <div class="container">
        <div class="row topic-block">
          <div class="col-md-8">
            <picture class="fw-xs">
              <source srcset="{{ comparePage.metafields["global"]["cta-image-desktop"] }}" media="(min-width: {{ screenMd }})">
              <img src="{{ comparePage.metafields["global"]["cta-image-mobile"] }}" alt="{{ comparePage.metafields["global"]["cta-image-alt"] }}">
            </picture>  
          </div>
          <div class="col-md-4">
            <div class="topic-content">
              <h2 class="title">{{ comparePage.metafields["global"]["cta-title"] }}</h2>
              <p class="description">{{ comparePage.metafields["global"]["cta-text"] }}</p>
              <div class="btn-set">
                <a class="btn btn-secondary" href="{{ comparePage.url }}">Compare</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  {% endunless %}
{% endif %}